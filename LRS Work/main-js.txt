// Require.js allows us to configure shortcut alias
/*****
IMPORTANT NOTE: 
Don't edit js/main.js file directly. This file is supposed to be generated by grunt watch task
so before modifying it run "grunt watch" command from command line 
Edit file main_dev.js file inside dev directory
***/ 
require.config({
    // The shim config allows us to configure dependencies for
    // scripts that do not call define() to register a module
    urlArgs: "v="+"2c39ea5de11a3ba99bafe2cc4efe123f",//"bust=" + (new Date()).getTime(), 
    waitSeconds : 180,   
    shim: {
        'underscore': {
            exports: '_'
        },
        'bootstrap': {
            deps: [
                'jquery'
            ]
        },
        'backbone': {
            deps: [
            	'jquery',
                'underscore'                
            ],
            exports: 'Backbone'
        }, 'handlebars': {
            exports: 'Handlebars'
        }, 'handlebarsview': {
            deps: [
                'backbone',
                'handlebars'
            ],
            exports: 'HandlebarsView'
        }, 'highcharts': {
            deps: [
                'jquery'
            ],
            exports: 'highcharts'
        }, 'lrs': {
            deps: [
                'jquery'
            ],
            exports: 'LRS'
        }, 'lrsadmin': {
            deps: [
                'jquery'
            ],
            exports: 'LRSAmin'
        }
        ,'modelbinderview' : {
            deps: [
            	'jquery',
            	'underscore',
                'backbone'                
            ]
        } 
        , 'collectionbinderview': {
            deps: [
            	'jquery',
            	'underscore',
                'backbone',                
                'modelbinderview'
            ]
        }, 'purl' : {
            deps : ['jquery']
        }
        , 'select2': {
            deps: [
                'jquery'
            ],
            exports: 'select2'
        }
        , 'customSelect': {
            deps: [
                'jquery'
            ],
            exports: 'customSelect'
        }
        , 'datepicker': {
            deps: [
                'jquery',
                'momentjs'
            ],
            exports: 'datepicker'
        }, 'backbonevalidation':{
            deps:[
                'jquery',
                'underscore',
                'backbone'                
            ],
            exports: 'Backbone.Validation'
        }, 'selectBoxIt':{
            deps:['jquery','jqueryui'],
            exports: 'selectBoxIt'
        }, 'jqueryui':{
            deps : ['jquery']
        }, 'blockUI': {
            deps: ['jquery']
        }, 'maskedInput': {
            deps: ['jquery']
        }, 'mask': {
            deps: ['jquery']
        }, 'selectric' : {
            deps: ['jquery'],
            exports:'selectric'
        }, 'placeholder': {
            deps: ['jquery']
        }, 'cookie' : {
            deps: ['jquery']
        }, 'datatables.net' : {
            deps: ['jquery']
        }
    },
    paths: {
        jquery: ['//d1yo4pwtxc7j0a.cloudfront.net/dev/jquery-1.10.1.min', '//code.jquery.com/jquery-1.10.1.min','//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.1/jquery.min','lib/jquery/jquery.min'],
        jqueryui: ['//d1yo4pwtxc7j0a.cloudfront.net/dev/jquery-ui.min', '//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min','lib/jquery/jquery-ui.min'],
        bootstrap: 'lib/bootstrap/bootstrap',
        underscore: ['//d1yo4pwtxc7j0a.cloudfront.net/dev/lodash.compat.min', '//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.2.1/lodash.compat.min','lib/lodash/lodash.min'],
        backbone: ['//d1yo4pwtxc7j0a.cloudfront.net/dev/backbone-min', '//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.0.0/backbone-min','lib/backbone/backbone'],
        text: ['//d1yo4pwtxc7j0a.cloudfront.net/dev/text.min', '//cdnjs.cloudflare.com/ajax/libs/require-text/2.0.10/text.min','lib/require/text'],
        handlebars: 'lib/view/hacked-handlebars-1.0.0',
        handlebarsview: 'lib/view/backbone.handlebars',
        modelbinderview: 'lib/view/Backbone.ModelBinder',//dont load model binder from cdn as we have made some changes
        collectionbinderview: 'lib/view/Backbone.CollectionBinder',     
        backbonevalidation: 'lib/view/backbone-validation',           
        highcharts: 'lib/charting/highcharts',
        momentjs: ['//d1yo4pwtxc7j0a.cloudfront.net/dev/moment.min', '//cdnjs.cloudflare.com/ajax/libs/moment.js/2.1.0/moment.min','lib/view/moment'],
        select2: ['//d1yo4pwtxc7j0a.cloudfront.net/dev/select2.min', '//cdnjs.cloudflare.com/ajax/libs/select2/3.4.1/select2.min','lib/select2/select2'],
        customSelect: 'lib/customSelect/customSelect',
        datepicker: 'lib/view/datepicker',
        lrs: 'lib/lrs/lrs',
        lrsadmin: 'lib/lrs/lrsadmin',
        lrsUIUtil: 'lib/lrs/lrsUIUtil',
        lrsConstants: 'lib/lrs/lrsConstants',
        purl : ['//d1yo4pwtxc7j0a.cloudfront.net/dev/purl.min', '//cdnjs.cloudflare.com/ajax/libs/jquery-url-parser/2.3.1/purl.min','lib/purl/purl'],
        selectBoxIt: 'lib/selectBoxIt/jquery.selectBoxIt.min',
        holder: 'lib/holder/holder',
        dragCrop: 'lib/view/jquery.dragCrop',
        cropboxDep1: 'lib/cropbox/jquery.cropbox.dep.1',
        hammer: 'lib/cropbox/hammer',
        cropboxDep2: 'lib/cropbox/jquery.cropbox.dep.2',
        cropbox: 'lib/cropbox/jquery.cropbox',
        blockUI: 'lib/blockUI/jquery.blockUI.min',
        maskedInput: 'lib/view/jquery.maskedinput.min',
        mask: 'lib/view/jquery.mask.min',
        selectric : 'lib/jquery.selectric/jquery.selectric',
        placeholder : 'lib/fallbacks/jquery.placeholder',
        cookie : 'lib/jquery.cookie/jquery.cookie',
        'datatables.print' : 'lib/datatables/buttons.print.min',
        'datatables.net' : 'lib/datatables/jquery.dataTables.min',
        'datatables.net-buttons' : 'lib/datatables/dataTables.buttons.min'
    }
});

require([
    'app',
    'require',
    'lrs',         //force initialization
    'lrsadmin',    //force initialization
    'lrsUIUtil',   //force initialization
    'lrsConstants'   //force initialization
], function (App, require) {
    LRS.Config.options.debug = (enableLogs===undefined ? false : enableLogs);
    if (LRS.Config.options.offline) {
        require(['offline/offline'], function () {
            App.initialize();
        });
    } else {
        App.initialize();
    }
});

